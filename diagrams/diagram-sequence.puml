@startuml

    actor user as Player

    Player -> App : launch
    
    App -> OptionView : create-option-view()
    OptionView --> App : instance-option-view
    OptionView -> LoginView : create-login-view()
    LoginView --> OptionView : instance-login-view
    
    
    alt login case

        Player -> OptionView : click-button-login()
        OptionView -> LoginView : show()
        Player -> LoginView : enter-login()
        LoginView -> LoginChecker : identity

        alt first-connection

            LoginChecker -> LoginChecker : create-acount()
            LoginChecker --> App

        else connection

            LoginChecker -> LoginChecker : authentification()
            LoginChecker --> App

        end

        alt authentification-success

            App -> App : ConnectToServer()
        
        end

    end

    alt no-save case

        Player -> OptionView : click-button-new-game()
        OptionView --> App : click-event
        App -> Game : create-game()
        Game -> GameView : create-game-view()
        GameView --> Game : instance-game-view
        Game --> App : instance-de-game
        
        Player -> GameView : click-button-choose-pet()
        GameView --> Game : click-event
        Game -> Game : set-pet()
        Game --> App

        alt custom case

            Player -> GameView : click-button-custom-pet()
            GameView --> Game : click-event
            Game -> Game : custom-pet()
            Game --> App

        end

    else save case

        Player -> OptionView : click-button-load()
        OptionView --> App : click-event
        App -> Game : create-game()
        Game -> GameView : create-game-view()
        GameView --> Game : instance-game-view
        Game --> App : instance-de-game
        
        App -> Game : load()
        Game --> App

    end

    Player -> OptionView : click-button-start-game()
    OptionView --> App : click-event
    App -> Game : start()

    alt menu-option

        Player -> GameView : click-button-option()
        GameView --> Game : click-event
        Game --> App : click-event
        App -> OptionView : show()

    end

    alt room 

        Player -> GameView : click-button-change-room()
        GameView --> Game : click-event
        Game -> Game : change-room()
        Game -> Map : load-map()
        Map --> Game : instance-map

    else feed

        Player -> GameView : click-button-feed()
        GameView --> Game : click-event
        Game -> Pet : feed()
        Pet -> Pet : change-states()
        Pet --> Game : new-states
        Game --> GameView : new-states

    else interact-pet

        alt mini-game
        
            Player -> GameView : click-button-mini-game()
            GameView --> Game : click-event
            Game -> MiniGame : create-mini-game()
            MiniGame -> ViewMiniGame : create-view-mini-game()
            ViewMiniGame --> MiniGame : instance-view-mini-game
            MiniGame --> Game : instance-mini-game
            Game -> MiniGame : show()
            
            Player -> ViewMiniGame : send-input-to-play()
            ViewMiniGame --> MiniGame : input-event
            MiniGame -> Pet : do-action()
            Pet -> Pet : change-states()
            Pet --> Game : new-states
            Game --> GameView : new-states

        end

    end

@enduml
